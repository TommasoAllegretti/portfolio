---
import { CollectionEntry, getCollection } from "astro:content";

import { H1, Link, MDXComponents } from "@/React";
import Layout from "@/layouts/Layout.astro";

export const getStaticPaths = async () => {
  const posts = await getCollection("posts");
  return posts.map((post: { slug: any }) => ({
    params: { slug: post.slug },
    props: post,
  }));
};

const posts = (await getCollection("posts")).sort(
  (a, z) => +new Date(z.data.date) - +new Date(a.data.date)
);
const post = Astro.props as CollectionEntry<"posts">;
const tags = [...new Set(post.data.tags)].sort();
const { Content } = await post.render();

const index = posts.findIndex(({ id }) => id === post.id);
const prev = posts?.[index + 1];
const next = posts?.[index - 1];
---

<Layout title={`${post.data.title} | Tommaso Allegretti`}>
  <div class="max-w-5xl mx-auto py-12 text-[var(--white)]">
    <H1>{post.data.title}</H1>
    <p class="text-[var(--white)]">{post.data.description}</p>

    <div class="mt-5 text-sm text-[var(--white)]">
      <span class="opacity-70">{post.data.date}</span>
    </div>

    <hr class="h-16 border-0" />

    <Content components={MDXComponents} />

    <hr class="h-4 border-0" />

    <section class="my-8 text-sm">
      <div class="my-4 flex gap-8 text-sm">
        {
          prev ? (
            <Link
              className="mr-auto flex w-1/2 truncate rounded-sm py-2 text-left font-medium"
              href={`/blog/${prev.slug}`}
            >
              <span class="mr-2">←</span>
              <span class="flex-1 truncate">{prev.data.title}</span>
            </Link>
          ) : null
        }

        {
          next ? (
            <Link
              className="ml-auto flex w-1/2 truncate rounded-sm py-2 text-right font-medium"
              href={`/blog/${next.slug}`}
            >
              <span class="flex-1 truncate">{next.data.title}</span>
              <span class="ml-2">→</span>
            </Link>
          ) : null
        }
      </div>
    </section>

    <script is:inline>
      document.querySelectorAll(".copy-code").forEach((button) => {
        button.addEventListener("click", (event) => {
          navigator.clipboard
            .writeText(String(event.target.nextSibling?.textContent))
            .then(() => (event.target.textContent = "Copied!"))
            .catch(() => (event.target.textContent = "Not supported"));
        });
        button.addEventListener(
          "blur",
          (event) => (event.target.textContent = "Copy")
        );
      });
    </script>
  </div>
</Layout>
